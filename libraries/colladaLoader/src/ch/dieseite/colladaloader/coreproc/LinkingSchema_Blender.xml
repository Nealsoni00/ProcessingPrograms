<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<root xmlns="http://www.die-seite.ch" >
<!-- this section defines required collada tags to be found and linked into internal database -->
<!-- The ObjectLinker makes a scan through the whole collada doc for each entities sections-->
	<loading>
		<!-- begin textures and colors -->

      	<entities poolname="imageNames"> 
			<target idValueIn="#id" pattern="COLLADA/library_images/image"> 
				<target pattern="COLLADA/library_images/image/init_from">
				</target>                             		
			</target>
		</entities>
		<!-- packed two entities in one because sid's are unique.. -->
		<entities poolname="refImageNames"> 
			<target idValueIn="#sid" pattern="COLLADA/library_effects/effect/profile_COMMON/newparam"> 
				<target nextIdValueIn="$TEXTCONTENT" nextEntity="imageNames" pattern="COLLADA/library_effects/effect/profile_COMMON/newparam/surface/init_from">
				</target>                             		
				<target nextIdValueIn="$TEXTCONTENT" nextEntity="refImageNames" pattern="COLLADA/library_effects/effect/profile_COMMON/newparam/sampler2D/source">
				</target>                             		
			</target>
		</entities>
		
		<entities poolname="effects"> 
			<target idValueIn="#id" pattern="COLLADA/library_effects/effect"> 
				<target pattern="COLLADA/library_effects/effect/profile_COMMON/technique/phong/diffuse/color">
				</target>
				<target nextIdValueIn="#texture" nextEntity="refImageNames" pattern="COLLADA/library_effects/effect/profile_COMMON/technique/phong/diffuse/texture">
				</target> 
				<target pattern="COLLADA/library_effects/effect/profile_COMMON/technique/phong/transparency/float">
				</target>
				<!-- try another source (Maya/blinn) -->                                   		
				<target pattern="COLLADA/library_effects/effect/profile_COMMON/technique/blinn/diffuse/color">
				</target>
				<target nextIdValueIn="#texture" nextEntity="refImageNames" pattern="COLLADA/library_effects/effect/profile_COMMON/technique/blinn/diffuse/texture">
				</target> 
				<target pattern="COLLADA/library_effects/effect/profile_COMMON/technique/blinn/transparency/float">
				</target>                                   		
			</target>
		</entities>
		
		<entities poolname="library_materials"> 
			<target idValueIn="#id" pattern="COLLADA/library_materials/material"> 
				<target nextIdValueIn="#url" nextEntity="effects" pattern="COLLADA/library_materials/material/instance_effect">
				</target>                             		
			</target>
		</entities>
	
		<!-- Whohoo: Blender gives unique material symbols... -->	
		<entities poolname="reference_library_materials"> 
			<target idValueIn="#symbol" nextIdValueIn="#target" nextEntity="library_materials" pattern="COLLADA/library_visual_scenes/visual_scene/node/instance_geometry/bind_material/technique_common/instance_material">                          		
			</target>
			<!-- in case of animated bones -->			
			<target idValueIn="#symbol" nextIdValueIn="#target" nextEntity="library_materials" pattern="COLLADA/library_visual_scenes/visual_scene/node/instance_controller/bind_material/technique_common/instance_material">                          		
			</target>
		</entities>
		

		<!-- Texture image names and colors dumped.. -->
		
		
		
		<!--  collect geometry datas -->
		
		<entities poolname="floatArrays"> 
			<target idValueIn="#id" pattern="COLLADA/library_geometries/geometry/mesh/source"> 
				<target pattern="COLLADA/library_geometries/geometry/mesh/source/float_array">
				</target>                             		
			</target>
		</entities>
		
		<entities poolname="refFloatArraysVertice"> 
			<target idValueIn="#id" pattern="COLLADA/library_geometries/geometry/mesh/vertices"> 
				<target nextIdValueIn="#source" nextEntity="floatArrays" pattern="COLLADA/library_geometries/geometry/mesh/vertices/input#semantic=POSITION">
				</target>                             		
			</target>
		</entities>
		
		
		<entities poolname="geometries"> 
			<target idValueIn="#id" pattern="COLLADA/library_geometries/geometry">
				<!-- Whohoo... Blender gives unique material symbols... -->	
				<target nextIdValueIn="#material" nextEntity="reference_library_materials" pattern="COLLADA/library_geometries/geometry/mesh/polylist">
					<target nextIdValueIn="#source" nextEntity="refFloatArraysVertice" pattern="COLLADA/library_geometries/geometry/mesh/polylist/input#semantic=VERTEX">
					</target>
					<target nextIdValueIn="#source" nextEntity="floatArrays" pattern="COLLADA/library_geometries/geometry/mesh/polylist/input#semantic=TEXCOORD">
					</target>
					<target pattern="COLLADA/library_geometries/geometry/mesh/polylist/p">
					</target>
					<target pattern="COLLADA/library_geometries/geometry/mesh/polylist/vcount">
					</target>					
				</target>
				<target nextIdValueIn="#material" nextEntity="reference_library_materials" pattern="COLLADA/library_geometries/geometry/mesh/lines">
					<target nextIdValueIn="#source" nextEntity="refFloatArraysVertice" pattern="COLLADA/library_geometries/geometry/mesh/lines/input#semantic=VERTEX">
					</target>
					<target pattern="COLLADA/library_geometries/geometry/mesh/lines/p">
					</target>		
				</target>
			</target>
		</entities>
		
		
		<!-- they add a transform matrix (stupid feature) -->
		<entities poolname="matrices"> 
			<target pattern="COLLADA/library_visual_scenes/visual_scene/node">
				<target nextIdValueIn="#url" nextEntity="geometries" pattern="COLLADA/library_visual_scenes/visual_scene/node/instance_geometry">
				</target>
				<target pattern="COLLADA/library_visual_scenes/visual_scene/node/matrix">
				</target>
			</target>
			<!-- in case of animation bones only  (one of huge varieties of collada)-->
			<target nextIdValueIn="#source" nextEntity="geometries" pattern="COLLADA/library_controllers/controller/skin">
				<target pattern="COLLADA/library_controllers/controller/skin/bind_shape_matrix">
				</target>
			</target>
		</entities>
		
					
	</loading>
	
<!-- now records are completely linked. Next section defines how to deal fetched data above to Triangles/Lines  -->
<!-- The Data Assembler reads this section and runs iterations and functions -->

	<assembling>
		<!-- load Textures -->
		<iteration source="refImageNames" tuple="aRefImageName">
			<function name = "importTextures" class="ch.dieseite.colladaloader.asmbeans.Common" result="texPool">
				<paramlist source="aRefImageName" args="c source j 1 c init_from j 1 c init_from"/>
				<paramlist source="texPool"/>
				<paramlist source="colladaInterface"/>
			</function>
		</iteration>
		
		
		<!-- create processing Triangles using Geometry bundles -->
	
		<iteration source="geometries" tuple="polygon_lists">
			<iteration source="polygon_lists" tuple="aPolyList">
				<function name = "createColor" class="ch.dieseite.colladaloader.asmbeans.Blender" result="aColor">
					<paramlist source="aPolyList" args="j 2 c instance_effect j 1 c color;j 2 c instance_effect j 1 c float"/>
				</function>
				<function name = "getTexImage" class="ch.dieseite.colladaloader.asmbeans.Common" result="aTexImage">
					<paramlist source="aPolyList" args="j 2 c instance_effect j 1 c texture j 1 c source j 1 c init_from j 1 c init_from"/>
					<paramlist source="texPool" />
					<paramlist source="colladaInterface" />
				</function>
				<function name = "parseCoordData" class="ch.dieseite.colladaloader.asmbeans.Blender" result="coordData">
					<paramlist source="aPolyList" args="c input#semantic=VERTEX;
														c input#semantic=TEXCOORD;
														c input#semantic=VERTEX j 1 c input#semantic=POSITION j 1 c float_array;
														c input#semantic=TEXCOORD j 1 c float_array;
														c vcount;
														c p;
														b 3 c matrix;
														b 2 c bind_shape_matrix"/>
				</function>
				<function name = "createTriangles" class="ch.dieseite.colladaloader.asmbeans.Blender" result="triangles">
					<paramlist source="coordData" />
					<paramlist source="aTexImage" />
					<paramlist source="aColor" />
					<paramlist source="colladaInterface" />
				</function>
				<function name = "createLines" class="ch.dieseite.colladaloader.asmbeans.Common" result="lines">
					<paramlist source="coordData" />
					<paramlist source="aColor" />
				</function>
				<!-- a stupid idea of blender to add a matrix -->
				<function name = "transformShapes" class="ch.dieseite.colladaloader.asmbeans.Blender">
					<paramlist source="triangles" />
					<paramlist source="lines" />
					<paramlist source="coordData" />
				</function>			
				<function name = "addShapes" class="ch.dieseite.colladaloader.asmbeans.Common">
					<paramlist source="colladaInterface" />
					<paramlist source="triangles" />
					<paramlist source="lines" />
				</function>	
			</iteration>
		</iteration>
		<function name = "submitShapes" class="ch.dieseite.colladaloader.asmbeans.Common">
			<paramlist source="colladaInterface" />
		</function>			
	
	</assembling>
	
	<!-- where start params come from or the LoadingListener is fired.. -->
	<interface name="colladaInterface" class="ch.dieseite.colladaloader.asmbeans.DescriptorCommon" />
	
</root>


